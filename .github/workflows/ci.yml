name: Run Test 🚀

on: #main을 타켓으로 PR 올리거나, main에 Merge 될 때 워크플로우 실행
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs: # 이 job의 결과를 다른 job에서 사용할 수 있도록 output 설정
      matrix: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2 # 어떤 서비스 디렉토리가 변경되었는지 감지
        id: filter
        with:
          filters: |
            gateway:
              - 'gateway/**'
            server:
              - 'server/**'
            user:
              - 'com.templlo.service.user/**'
            promotion:
              - 'com.templlo.service.promotion/**'
            reservation:
              - 'com.templlo.service.reservation/**'
            temple:
              - 'com.templlo.service.temple/**'
            program:
              - 'com.templlo.service.program/**'
            review:
              - 'com.templlo.service.review/**'

  build:
    needs: changes
    if: ${{ needs.changes.outputs.matrix != '[]' }}
    name: Build and Test Services
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false  # 하나의 서비스 실패해도 다른 서비스 계속 빌드
      matrix:
        service: ${{ fromJSON(needs.changes.outputs.matrix) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Build and Test
        working-directory: ${{ matrix.service }}
        run: |
          echo "Building ${{ matrix.service }}"
          chmod +x gradlew
          ./gradlew clean build
